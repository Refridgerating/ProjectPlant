apply plugin: 'com.android.application'

android {
    namespace = "com.projectplant.app"
    compileSdk = rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId = "com.projectplant.app"
        minSdkVersion = rootProject.ext.minSdkVersion
        targetSdkVersion = rootProject.ext.targetSdkVersion
        versionCode = 1
        versionName = "1.0"
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
             // Files and dirs to omit from the packaged assets dir, modified to accommodate modern web apps.
             // Default: https://android.googlesource.com/platform/frameworks/base/+/282e181b58cf72b6ca770dc7ca5f91f135444502/tools/aapt/AaptAssets.cpp#61
            ignoreAssetsPattern = '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }
    signingConfigs {
        release {
            // Configure via gradle.properties; see docs/android-release.md
            if (project.hasProperty('RELEASE_STORE_FILE') &&
                project.hasProperty('RELEASE_STORE_PASSWORD') &&
                project.hasProperty('RELEASE_KEY_ALIAS') &&
                project.hasProperty('RELEASE_KEY_PASSWORD')) {
                storeFile = file(RELEASE_STORE_FILE)
                storePassword = RELEASE_STORE_PASSWORD
                keyAlias = RELEASE_KEY_ALIAS
                keyPassword = RELEASE_KEY_PASSWORD
            }
        }
    }
    buildTypes {
        release {
            // Sign with the configured release keystore (only if configured)
            if (signingConfigs.release != null && signingConfigs.release.storeFile != null) {
                signingConfig = signingConfigs.release
            }
            // Enable code shrinker (R8) and resource shrinking for smaller APK
            minifyEnabled = true
            shrinkResources = true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    // Secure storage (EncryptedSharedPreferences)
    implementation "androidx.security:security-crypto:1.0.0"
    implementation project(':capacitor-android')
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    implementation project(':capacitor-cordova-android-plugins')

    def localAarDir = file('libs')
    if (localAarDir.exists()) {
        localAarDir.listFiles()?.findAll { it.name.endsWith('.aar') }?.each { implementation files(it) }
    }
}

apply from: 'capacitor.build.gradle'


try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}




